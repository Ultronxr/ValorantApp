<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ultronxr.valorant.bean.mybatis.mapper.StoreFrontMapper">

    <resultMap id="ResultMapBatchBoth" type="cn.ultronxr.valorant.bean.VO.BatchBothStoreFrontVO">
        <result column="account_no" jdbcType="BIGINT" property="accountNo" />
        <result column="has_email" jdbcType="TINYINT" property="hasEmail" />
        <result column="is_bonus" jdbcType="TINYINT" property="isBonus" />
        <result column="date" jdbcType="VARCHAR" property="date" />
        <result column="cost_list" jdbcType="VARCHAR" property="costList" typeHandler="cn.ultronxr.valorant.typeHandler.IntegerJsonArrayTypeHandler" />
        <result column="discount_percent_list" jdbcType="VARCHAR" property="discountPercentList" typeHandler="cn.ultronxr.valorant.typeHandler.IntegerJsonArrayTypeHandler" />
        <result column="discount_cost_list" jdbcType="VARCHAR" property="discountCostList" typeHandler="cn.ultronxr.valorant.typeHandler.IntegerJsonArrayTypeHandler" />
        <result column="display_name_list" jdbcType="VARCHAR" property="displayNameList" typeHandler="cn.ultronxr.valorant.typeHandler.StringJsonArrayTypeHandler" />
        <result column="display_icon_list" jdbcType="VARCHAR" property="displayIconList" typeHandler="cn.ultronxr.valorant.typeHandler.StringJsonArrayTypeHandler" />
        <result column="content_tier_list" jdbcType="VARCHAR" property="contentTierList" typeHandler="cn.ultronxr.valorant.typeHandler.StringJsonArrayTypeHandler" />
    </resultMap>

    <select id="batchQueryBoth" parameterType="java.lang.Object" resultMap="ResultMapBatchBoth">
        SELECT
            account.account_no, account.has_email, store.is_bonus, store.date,
            JSON_ARRAYAGG(store.cost) AS cost_list,
            JSON_ARRAYAGG(store.discount_percent) AS discount_percent_list,
            JSON_ARRAYAGG(store.discount_cost) AS discount_cost_list,
            JSON_ARRAYAGG(skin.display_name) AS display_name_list,
            JSON_ARRAYAGG(skin.display_icon) AS display_icon_list,
            JSON_ARRAYAGG(skin.content_tier_uuid) AS content_tier_list
        FROM
            valorant_store_front AS store, valorant_weapon_skin AS skin, valorant_riot_account AS account
        WHERE
            store.item_id = skin.uuid
            AND store.user_id = account.user_id
            AND account.is_del = 0
            <if test="batchQueryBothDTO.hasEmail != null">
                AND account.has_email = #{batchQueryBothDTO.hasEmail}
            </if>
            AND store.date >= #{batchQueryBothDTO.date}
            AND store.user_id IN
                (SELECT single.user_id FROM (
                    (SELECT
                        store.user_id, GROUP_CONCAT(skin.display_name) AS display_name_list
                    FROM
                        valorant_store_front AS store, valorant_weapon_skin AS skin
                    WHERE
                        store.item_id = skin.uuid
                        AND store.date = #{batchQueryBothDTO.date}
                        AND store.is_bonus = 0
                    GROUP BY
                        store.user_id, store.is_bonus, store.date
                    HAVING
                        1
                        <if test="batchQueryBothDTO.skin1 != null">
                            AND display_name_list LIKE CONCAT('%', #{batchQueryBothDTO.skin1}, '%')
                        </if>
                        <if test="batchQueryBothDTO.skin2 != null">
                            AND display_name_list LIKE CONCAT('%', #{batchQueryBothDTO.skin2}, '%')
                        </if>
                        <if test="batchQueryBothDTO.skin3 != null">
                            AND display_name_list LIKE CONCAT('%', #{batchQueryBothDTO.skin3}, '%')
                        </if>
                        <if test="batchQueryBothDTO.skin4 != null">
                            AND display_name_list LIKE CONCAT('%', #{batchQueryBothDTO.skin4}, '%')
                        </if>
                    ) AS single
                INNER JOIN
                    (SELECT
                        store.user_id, GROUP_CONCAT(skin.display_name) AS display_name_list
                    FROM
                        valorant_store_front AS store, valorant_weapon_skin AS skin
                    WHERE
                        store.item_id = skin.uuid
                        AND store.date >= #{batchQueryBothDTO.date}
                        AND store.is_bonus = 1
                    GROUP BY
                        store.user_id, store.is_bonus, store.date
                    HAVING
                        1
                        <if test="batchQueryBothDTO.bonusSkin1 != null">
                            AND display_name_list LIKE CONCAT('%', #{batchQueryBothDTO.bonusSkin1}, '%')
                        </if>
                        <if test="batchQueryBothDTO.bonusSkin2 != null">
                            AND display_name_list LIKE CONCAT('%', #{batchQueryBothDTO.bonusSkin2}, '%')
                        </if>
                        <if test="batchQueryBothDTO.bonusSkin3 != null">
                            AND display_name_list LIKE CONCAT('%', #{batchQueryBothDTO.bonusSkin3}, '%')
                        </if>
                    ) AS bonus
                ON single.user_id = bonus.user_id))
        GROUP BY
            account.account_no, store.user_id, store.is_bonus, store.date
        ORDER BY
            -- ANY_VALUE() 函数用于抑制 ONLY_FULL_GROUP_BY SQL_MODE 限制
            account_no ASC, is_bonus ASC, ANY_VALUE(skin.uuid) ASC
    </select>

    <select id="batchQueryBothWhileNightShopClosed" parameterType="java.lang.Object" resultMap="ResultMapBatchBoth">
        SELECT
            account.account_no, account.has_email, store.is_bonus, store.date,
            JSON_ARRAYAGG(store.cost) AS cost_list,
            JSON_ARRAYAGG(store.discount_percent) AS discount_percent_list,
            JSON_ARRAYAGG(store.discount_cost) AS discount_cost_list,
            JSON_ARRAYAGG(skin.display_name) AS display_name_list,
            JSON_ARRAYAGG(skin.display_icon) AS display_icon_list,
            JSON_ARRAYAGG(skin.content_tier_uuid) AS content_tier_list
        FROM
            valorant_store_front AS store, valorant_weapon_skin AS skin, valorant_riot_account AS account
        WHERE
            store.item_id = skin.uuid
            AND store.user_id = account.user_id
            AND account.is_del = 0
            <if test="batchQueryBothDTO.hasEmail != null">
                AND account.has_email = #{batchQueryBothDTO.hasEmail}
            </if>
            AND store.date = #{batchQueryBothDTO.date}
            AND store.user_id IN
                (SELECT
                    store.user_id
                FROM
                    valorant_store_front AS store, valorant_weapon_skin AS skin
                WHERE
                    store.item_id = skin.uuid
                    AND store.date = #{batchQueryBothDTO.date}
                    AND store.is_bonus = 0
                GROUP BY
                    store.user_id, store.is_bonus, store.date
                HAVING
                    1
                    <if test="batchQueryBothDTO.skin1 != null">
                        AND GROUP_CONCAT(skin.display_name) LIKE CONCAT('%', #{batchQueryBothDTO.skin1}, '%')
                    </if>
                    <if test="batchQueryBothDTO.skin2 != null">
                        AND GROUP_CONCAT(skin.display_name) LIKE CONCAT('%', #{batchQueryBothDTO.skin2}, '%')
                    </if>
                    <if test="batchQueryBothDTO.skin3 != null">
                        AND GROUP_CONCAT(skin.display_name) LIKE CONCAT('%', #{batchQueryBothDTO.skin3}, '%')
                    </if>
                    <if test="batchQueryBothDTO.skin4 != null">
                        AND GROUP_CONCAT(skin.display_name) LIKE CONCAT('%', #{batchQueryBothDTO.skin4}, '%')
                    </if>
                )
        GROUP BY
            account.account_no, store.user_id, store.is_bonus, store.date
        ORDER BY
            account_no ASC, is_bonus ASC, ANY_VALUE(skin.uuid) ASC
    </select>

</mapper>